ext {

    //General purpose
    kotlin_version = '1.3.0'
    dagger_version = '2.16.0'
    gradle_plugin = '3.1.4'
    lifecycle_version = '1.1.1'

    //Desgin
    support_version = '28.0.0'
    constraint_version = '1.1.3'
    picasso_version = '2.71828'

    //Testing
    espresso_version = '3.0.2'
    android_test = '1.0.2'
    mockito_version = '2.23.0'
    junit_version = '4.12'

    //Network
    retrofit_version = '2.4.0'
    okhttp_version = '3.11.0'
    gson_version = '2.8.5'

    kotlin = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    unitTesting = [
            junit: "junit:junit:${junit_version}",
            mockito: "org.mockito:mockito-core:${mockito_version}",
            kotlinJunit: "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    ]

    androidTesting = [
            testRunner: "com.android.support.test:runner:${android_test}",
            espresso: "com.android.support.test.espresso:espresso-core:${espresso_version}",
            testRules: "com.android.support.test:rules:${android_test}",
            mockito: "org.mockito:mockito-android:${mockito_version}",
            mockitoSupport: "com.android.support.test.espresso:espresso-contrib:${mockito_version}"
    ]

    mockitoSupportEx = [ 'support-annotations', 'support-v4', 'support-v13', 'recyclerview-v7' ]

    uiDesign = [
            lifecycle: "android.arch.lifecycle:extensions:${lifecycle_version}",
            constraintLayout: "com.android.support.constraint:constraint-layout:${constraint_version}",
            recycler: "com.android.support:recyclerview-v7:${support_version}",
            design: "com.android.support:design:${support_version}",
            cardView: "com.android.support:cardview-v7:${support_version}",
            picasso: "com.squareup.picasso:picasso:${picasso_version}"
    ]

    picassoEx = [ 'com.android.support' ]

    network = [
            okhttp: "com.squareup.okhttp3:okhttp:${okhttp_version}",
            loggingOkhttp: "com.squareup.okhttp3:logging-interceptor:${okhttp_version}",
            gson: "com.google.code.gson:gson:${gson_version}",
            retrofit: "com.squareup.retrofit2:retrofit:${retrofit_version}",
            retrofitGson: "com.squareup.retrofit2:converter-gson:${retrofit_version}"
    ]
    annotationProc = [
            dagger:  "com.google.dagger:dagger-compiler:${dagger_version}",
            databinding:  "com.android.databinding:compiler:${gradle_plugin}"
    ]

    annotationAndroidProc = [
            dagger:  "com.google.dagger:dagger-compiler:${dagger_version}"
    ]


}
